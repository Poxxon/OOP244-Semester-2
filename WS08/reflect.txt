During this workshop, I explored key concepts such as inheritance, polymorphism, and virtual functions. The use of the virtual keyword in virtual functions allows derived classes to override methods from the base class. This process supports dynamic binding, letting the program determine the actual object type at runtime.
I also learned about pure virtual functions, which are specified using = 0;. A class that contains only virtual functions is called an abstract base class and cannot be instantiated. Instead, it acts as a model for other classes to implement its methods. These implementing classes, known as concrete classes, can be instantiated.
While initially challenging, the concepts of virtual functions, abstract base classes, and concrete classes became clearer through hands-on practice. Creating an abstract base class and deriving concrete classes from it was a particularly insightful experience.