Working on this project taught me more by focusing on creating and managing MotorVehicle and Truck classes. The MotorVehicle class, with its attributes like license plate, year, and current location, taught me the importance of encapsulation and method overloading. Extending this class, the Truck class added cargo management features, showcasing inheritance and polymorphism. The utility functions in Utils.cpp supported string operations, crucial for handling vehicle details efficiently. The main function tied everything together, demonstrating the interaction between classes and methods in a complete program. Through this project, I deepened my understanding of encapsulation, inheritance, polymorphism, and stream operations in C++. Testing and debugging the moveTo and cargo management methods underscored the importance of thorough testing. Looking ahead, I see room for improvement, such as implementing exception handling for more robust error management and further abstraction to better separate interface and implementation. Overall, this project was a valuable hands-on experience, reinforcing my theoretical knowledge with practical application.